name: Sync+build DivestOS-MicroG

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #schedule:
    # * is a special character in YAML so you have to quote this string
    #- cron:  '0 0 * * *'
  workflow_dispatch: # Allows manually triggering from the Actions page

#env:
  # DEFAULT
  # GITHUB_WORKSPACE: /home/runner/work/Mirror-workflows/Mirror-workflows

jobs:
  # get_commits:
    # runs-on: ubuntu-latest
    # # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
    # outputs:
      # LOCAL: ${{ steps.commits.outputs.SETLOCAL }}
      # REMOTE: ${{ steps.commits.outputs.SETREMOTE }} 
    # steps:
      # - name: Checkout
        # uses: actions/checkout@v3
        # with:
          # ref: 'DivestOS-MicroG' # branch
      # - name: set local and remote latest commit as environment variables
        # id: commits
        # # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
        # # https://gitlab.com/divested-mobile/divestos-build/-/issues/17#note_1113008704
        # run: |
          # echo "::set-output name=SETREMOTE::$(curl -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:105.0) Gecko/20100101 Firefox/105.0' 'https://divestos.org/updater.php?base=LineageOS&device=lavender')"
          # echo "::set-output name=SETLOCAL::$(cat last_sync_with_original_repo_sha512sum)"
  
  # repo_sync:
    # needs: [get_commits]
    # runs-on: ubuntu-latest
    # # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
    # #if: needs.get_commits.outputs.LOCAL != needs.get_commits.outputs.REMOTE
    # steps:
      # - name: repo-sync
        # uses: wei/git-sync@v3
        # with:
          # source_repo: "https://gitlab.com/divested-mobile/divestos-build"
          # source_branch: "master"
          # destination_repo: "git@github.com:schklom/DivestOS-MicroG.git"
          # destination_branch: "DivestOS-MicroG"
          # ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY_ACTION }}
      
      # - name: Checkout
        # uses: actions/checkout@v3
        # with:
          # ref: 'DivestOS-MicroG' # branch
      
      # # https://gitlab.com/divested-mobile/divestos-build/-/issues/17#note_1113008704
      # - name: get most recent release on original repo, for next comparison on sync
        # run: |
          # curl -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:105.0) Gecko/20100101 Firefox/105.0' 'https://divestos.org/updater.php?base=LineageOS&device=lavender' > last_sync_with_original_repo_sha512sum
      
      # - name: Commit and push the change
        # uses: stefanzweifel/git-auto-commit-action@v4.14.1
        # with:
          # commit_message: Add last_sync_with_original_repo_sha512sum
      
      # # https://gitlab.com/divested-mobile/divestos-build/-/blob/master/Scripts/init.sh
      # - name: Turn on MicroG
        # run: sed -ri 's/^.*export DOS_MICROG_INCLUDED="NONE";/export DOS_MICROG_INCLUDED="FULL";/' Scripts/init.sh
      
      # #- name: Setup ANDROID_HOME
      # #  run: |
      # #    mkdir -p $GITHUB_WORKSPACE/Android/Sdk
      # #    sed -ri 's/^export ANDROID_HOME=.*;/export ANDROID_HOME=$GITHUB_WORKSPACE"\/Android\/Sdk";/' Scripts/init.sh
      
      # #- name: Setup DOS_WORKSPACE_ROOT
      # #  run: |
      # #    mkdir -p $GITHUB_WORKSPACE/dos
      # #    sed -ri 's/^export DOS_WORKSPACE_ROOT=.*;/export DOS_WORKSPACE_ROOT=$GITHUB_WORKSPACE"\/dos\/";/' Scripts/init.sh
      
      # #- name: Setup DOS_BUILDS
      # #  run: |
      # #    mkdir -p $GITHUB_WORKSPACE/dos/Builds
      # #    sed -ri 's/^export DOS_BUILDS=.*;/export DOS_BUILDS=$GITHUB_WORKSPACE"\/dos\/Builds\/";/' Scripts/init.sh
      
      # - name: Setup USE_CCACHE
        # run: sed -ri 's/^.*export USE_CCACHE=.*;/export USE_CCACHE=1;/' Scripts/init.sh
      
      # - name: Setup CCACHE_COMPRESS
        # run: sed -ri 's/^.*export CCACHE_COMPRESS=.*;/export CCACHE_COMPRESS=1;/' Scripts/init.sh
      
      # - name: Setup CCACHE_COMPRESSLEVEL
        # run: sed -ri 's/^.*export CCACHE_COMPRESSLEVEL=.*;/export CCACHE_COMPRESSLEVEL=1;/' Scripts/init.sh
      
      # - name: Setup CCACHE_EXEC
        # run: echo "export CCACHE_EXEC=/usr/bin/ccache;" >> Scripts/init.sh
      
      # - name: Setup CCACHE_DIR
        # run: |
          # sed -ri 's/^.*export CCACHE_DIR="";/export CCACHE_DIR="\/mnt\/ccache";/' Scripts/init.sh
          # echo "mkdir -p /mnt/ccache" >> Scripts/init.sh
      # #    mkdir -p $GITHUB_WORKSPACE/ccache
      # #    sed -ri 's/^.*export CCACHE_DIR="";/export CCACHE_DIR="$GITHUB_WORKSPACE\/ccache";/' Scripts/init.sh
      
      # - name: Update .gitsubmodules
        # run: |
          # sed -ri 's/git@gitlab.com:/https:\/\/gitlab.com\//' .gitmodules
      
      # #- name: Turn off Hosts file??
      # #  run: sed -i 's/DOS_HOSTS_BLOCKING=true/DOS_HOSTS_BLOCKING=false/' Scripts/init.sh
      # #- name: Turn on GLONASS usage??
      # #  run: sed -i 's/DOS_GPS_GLONASS_FORCED=false/DOS_GPS_GLONASS_FORCED=true/' Scripts/init.sh
      # # https://github.com/marketplace/actions/git-auto-commit
      # - name: pushing MicroG changes
        # uses: stefanzweifel/git-auto-commit-action@v4.14.1
        # with:
          # # Optional but recommended
          # # Defaults to "Apply automatic changes"
          # commit_message: Turn on MicroG and ccache
          

  build_release:
  #  needs: [repo_sync]
    #needs: [get_commits]
    #runs-on: ubuntu-18.04
    runs-on: ubuntu-latest
    # GOCRYPT IS NOT AVAILABLE ON FEDORA 36+
    # https://github.com/rfjakob/gocryptfs/issues/650
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idcontainer
    
    container:
      image: fedora:latest
      volumes:
        # https://gitlab.com/divested-mobile/divestos-build/-/blob/master/Scripts/init.sh#L27
        - /home/runner/Builds:/mnt/backup-1/DOS/Builds/
      env:
        GOCRYPTFS_PASSWORD: ${{ secrets.GOCRYPTFS_PASSWORD }}
      # https://docs.docker.com/engine/reference/commandline/create/#options
      options: --privileged
      
    steps:      
      # https://divestos.org/index.php?page=build#deps
      
      ############## FEDORA BEGIN
      #  # https://ask.fedoraproject.org/t/how-to-install-fuse-on-fedora-33/11827/2
      - name: Installing dependencies - python2-virtualenv + fuse + wget
        run: |
          sudo dnf update -y;
          sudo dnf install -y @development-tools android-tools automake bc bison bzip2 bzip2-libs ccache curl dpkg-dev flex gcc gcc-c++ git git-lfs glibc-devel.{x86_64,i686} gnupg gperf ImageMagick ImageMagick-c++-devel ImageMagick-devel java-1.8.0-openjdk java-1.8.0-openjdk-devel libgcc.{x86_64,i686} libstdc++.{x86_64,i686} libX11-devel.{x86_64,i686} libxml2-devel libXrandr.{x86_64,i686} libXrender.{x86_64,i686} libxslt lz4-libs lzop make maven mesa-libGL-devel.{x86_64,i686} ncurses ncurses-compat-libs ncurses-devel.{x86_64,i686} ninja-build openssl-devel optipng jpegoptim perl-Digest-MD5-File perl-Switch pngcrush python python3 python3-mako python-mako python-markdown python-networkx readline-devel.{x86_64,i686} rsync schedtool SDL squashfs-tools syslinux-devel unzip wxGTK xml2 xz-lzma-compat zip zlib zlib-devel.{x86_64,i686} vim-common vboot-utils;
          sudo dnf install -y fuse fuse3 fuse-common fuse-libs fuse-overlayfs fuse3-libs;
          sudo dnf install -y wget;
      # install gocryptfs on Fedora 35
      ############## FEDORA END
      
      ############## UBUNTU-18.04 BEGIN
      ## https://askubuntu.com/questions/877683/unable-to-locate-package-libc6i386
      #- name: Add sources
      #  uses: myci-actions/add-deb-repo@10
      #  with:
      #    repo: deb http://us.archive.ubuntu.com/ubuntu/ xenial main universe
      #    repo-name: divestos
      #- name: Add sources
      #  uses: myci-actions/add-deb-repo@10
      #  with:
      #    repo: deb-src http://us.archive.ubuntu.com/ubuntu/ xenial main universe
      #    repo-name: divestos_src
      
      # https://askubuntu.com/questions/1082722/unable-to-locate-package-libesd0-dev-on-ubuntu-18-04
      #- name: Installing dependencies
      #  run: |
      #    sudo dpkg --print-architecture;
      #    sudo dpkg --add-architecture i386;
      #    
      #    sudo apt update && sudo apt upgrade && sudo apt full-upgrade && sudo apt -f install && sudo apt autoremove;
      #    sudo ln -s /usr/include/asm-generic /usr/include/asm;
      #    sudo apt install -y gocryptfs fuse;
      #    sudo apt install -y autoconf automake bc bison build-essential ccache curl expat flex g++ gawk gcc gcc-multilib git-core git-lfs g++-multilib gnupg gperf lib32ncurses5-dev lib32z1-dev lib32z-dev libc6-dev libc6-dev-i386 libcap-dev libcloog-isl-dev libesd0-dev libexpat1-dev libgcc1:i386 libgl1-mesa-dev libgmp-dev libmpc-dev libmpfr-dev libncurses5-dev libsdl1.2-dev libtool libx11-dev libxml2 libxml2-utils lzop maven ncurses-dev openjdk-8-jdk patch pkg-config pngcrush python-all-dev schedtool squashfs-tools subversion texinfo unzip x11proto-core-dev xsltproc zip zlib1g-dev imagemagick repo firejail optipng jpegoptim;
      #    sudo apt clean;
      ############## UBUNTU-18.04 END
      
      - name: env
        run: env
      
      - name: pwd
        run: pwd
      
      - name: ls $HOME
        run: ls -alhr $HOME
      
      ############## FEDORA BEGIN
      - name: Installing dependencies adjusting $PATH
        run: |
          PATH=$PATH:~/bin
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo;
          chmod a+x ~/bin/repo;
          sudo ln -sf /usr/share/crypto-policies/LEGACY/java.txt /etc/crypto-policies/back-ends/java.config;
          cd ~/
          wget "https://github.com/rfjakob/gocryptfs/releases/download/v2.3/gocryptfs_v2.3_linux-static_amd64.tar.gz"
          tar -xvzf gocryptfs_v2.3_linux-static_amd64.tar.gz
          rm gocryptfs_v2.3_linux-static_amd64.tar.gz
          mv gocryptfs* ~/bin/
      ############## FEDORA END
      
      - name: Retrieve GitHub code
        run: |
          umask 0022;
          git clone https://gitlab.com/divested-mobile/divestos-build.git DivestOS;
          cd DivestOS;
      
      - name: Adjust variables
        run: |
          PATH=$PATH:~/bin
          cd DivestOS;
          sed -ri 's/^.*export DOS_MICROG_INCLUDED="NONE";/export DOS_MICROG_INCLUDED="FULL";/' Scripts/init.sh
          sed -ri 's/^.*export USE_CCACHE=.*;/export USE_CCACHE=1;/' Scripts/init.sh
          sed -ri 's/^.*export CCACHE_COMPRESS=.*;/export CCACHE_COMPRESS=1;/' Scripts/init.sh
          sed -ri 's/^.*export CCACHE_COMPRESSLEVEL=.*;/export CCACHE_COMPRESSLEVEL=1;/' Scripts/init.sh
          echo "export CCACHE_EXEC=/usr/bin/ccache;" >> Scripts/init.sh
          sed -ri 's/^.*export CCACHE_DIR="";/export CCACHE_DIR="\/mnt\/ccache";/' Scripts/init.sh
          echo "mkdir -p /mnt/ccache" >> Scripts/init.sh
          sed -ri 's/git@gitlab.com:/https:\/\/gitlab.com\//' .gitmodules
      
      - name: Checking out the code
        run: |
          PATH=$PATH:~/bin
          cd DivestOS;
          git submodule update --init --recursive; #must have git-lfs installed
          mkdir -p Build/LineageOS-18.1/.repo/local_manifests Builds Signing_Keys .Signing_Keys;
          echo $GOCRYPTFS_PASSWORD | gocryptfs -init .Signing_Keys;
          echo 1111;
          echo $GOCRYPTFS_PASSWORD | gocryptfs .Signing_Keys/ Signing_Keys/;
          ##########################################nano Scripts/init.sh; #Choose your options and update paths
          cd Build/LineageOS-18.1;
          echo 2222;
          cat ../../Manifests/Manifest_LAOS-18.1.xml > .repo/local_manifests/local_manifest.xml;
          repo init -u https://github.com/LineageOS/android.git -b lineage-18.1;
          echo 3333;
          repo sync; #This part will take a while
          echo 4444;
          #Some systems have python3 set as default, the build scripts require python2
          ##########################################virtualenv venv --python=python2; #not necessary for 18.1 and higher
          #Generate signing keys
          source ../../Scripts/init.sh;
          ##########################################nano Generate_Signing_Keys.sh; #Update description
          source build/envsetup.sh && breakfast lineage_sailfish-user && make -j20 generate_verity_key; #edit device if not available, can be any
          sh Generate_Signing_Keys.sh lavender; #repeat as needed for other devices

      - name: Build
        run: |
          cd DivestOS;
          PATH=$PATH:~/bin
          cd Build/LineageOS-18.1;
          ##########################################source venv/bin/activate; #Only for python3 default systems, not needed for 18.1 and higher
          source ../../Scripts/init.sh;
          resetWorkspace;
          patchWorkspace;
          buildDevice lavender; #or buildAll for all supported devices
      
      - name: PWD
        run: echo "$(pwd)"
      
      - name: LS
        run: ls -alhr
      
      - name: ls /mnt/backup-1/DOS/Builds/
        run: ls -alhr /mnt/backup-1/DOS/Builds/
      
      - name: Release files
        uses: softprops/action-gh-release@v1
        with:
          ####tag_name: Gadgetbridge-osmand-experiments-${{ needs.get_commit_and_tag.outputs.REMOTETAG }}
          tag_name: DivestOS_with_MicroG
          #files: |
            # ./app/build/outputs/apk/app-debug.apk
          #files: ./app/build/outputs/apk/main/release/app-main-release-unsigned.apk
